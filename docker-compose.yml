version: '2'
services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server/
      dockerfile: Dockerfile
    image: eureka-server:latest
    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
    expose:
      - 8761
    ports:
      - 8761:8761
    networks:
      - spring-cloud-network
    logging:
      driver: json-file

  config-server:
    container_name: config-server   # Container name
    build:
      context: ./config-server/     # Dockerfile path
      dockerfile: Dockerfile        # Dockerfile name
    image: config-server:latest     # Image name
    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
    expose:
      - 8888
    ports:
      - 8888:8888
    networks:
      - spring-cloud-network        # Named networks name specified below
    depends_on:
      - eureka-server
    volumes:
      - config-repo:/opt/uni-master-microservice/config-repo # Named volume name specified below
    logging:
      driver: json-file             # Default is ‘json-file’ driver (alternatively ‘syslog’)

  notification-service:
    container_name: notification-service
    build:
      context: ./notification-service/
      dockerfile: Dockerfile
    image: notification-service:latest
    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
    expose:
      - 10001
    ports:
      - 10001:10001
    networks:
      - spring-cloud-network
    depends_on:
      - config-server
    logging:
      driver: json-file

#  gateway-service:
#    container_name: gateway-service
#    build:
#      context: ./gateway-service/
#      dockerfile: Dockerfile
#    image: gateway-service:latest
#    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
#    expose:
#      - 80
#    ports:
#      - 80:80
#    networks:
#      - spring-cloud-network
#    logging:
#      driver: json-file
#    depends_on:
#      - config-server
#
#  monitor-service:
#    container_name: monitor-service
#    build:
#      context: ./monitor-service/
#      dockerfile: Dockerfile
#    image: monitor-service:latest
#    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
#    expose:
#      - 9999
#    ports:
#      - 9999:9999
#    networks:
#      - spring-cloud-network
#    logging:
#      driver: json-file
#    depends_on:
#      - config-server
#
#  worker-service:
#    container_name: worker-service
#    build:
#      context: ./worker-service/
#      dockerfile: Dockerfile
#    image: worker-service:latest
#    entrypoint: /opt/uni-master-microservice/bin/entrypoint.sh
#    expose:
#      - 8100
#    ports:
#      - 8100:8100
#    networks:
#      - spring-cloud-network
#    logging:
#      driver: json-file
#    depends_on:
#      - config-server
#    environment:
#      SPRING_APPLICATION_JSON: '{ "spring": { "cloud": { "config": { "uri": "http://config-server:8888" } }, "application": { "name": "notification-service" } }, "server": { "port": 10001 } }'

networks:
  spring-cloud-network:       # Named network
    driver: bridge

volumes:
  config-repo:                # Named volume
    external: true            # Have to be created prior to docker-compose up docker volume create --name=spring-cloud-config-repo